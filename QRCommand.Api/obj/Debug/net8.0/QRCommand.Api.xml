<?xml version="1.0"?>
<doc>
    <assembly>
        <name>QRCommand.Api</name>
    </assembly>
    <members>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateQrCode(QRCommand.Api.Models.QRCodeGeneratorRequest,QRCommand.Api.Models.RenderType)">
            <summary>
            Generates a QR code for a given text.
            </summary>
            <remarks>
            Sample request:
            
                POST /api/QrCode/create
                {
                   "plainText": "Hello, World!",
                   "eccLevel": "Q",
                   "forceUtf8": false,
                   "utf8BOM": false,
                   "eciMode": "Default",
                   "requestedVersion": -1
                }
            
            This endpoint creates a QR code based on plain text input.
            </remarks>
            <param name="generatorRequest">The QR code generation request details.</param>
            <param name="renderType">The QR code output type</param>
            <returns>Returns a QR code image for the given text.</returns>
            <response code="200">Returns the QR code image</response>
            <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateWifiQrCode(QRCommand.Api.Models.Payloads.WiFiPayload,QRCommand.Api.Models.RenderType)">
            <summary>
            Generates a QR code for connecting to a WiFi network.
            </summary>
            <remarks>
            Sample request:
            
                POST /api/QrCode/create/wifi
                {
                   "ssid": "MyWiFiNetwork",
                   "password": "MySecretPassword",
                   "isWPA": true
                }
            
            This endpoint creates a QR code that, when scanned, connects a device to the specified WiFi network.
            </remarks>
            <param name="request">The WiFi connection details.</param>
            <param name="renderType">The QR code output type</param>
            <returns>Returns a QR code image for WiFi connection.</returns>
            <response code="200">Returns the QR code image</response>
            <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateUrlQrCode(QRCommand.Api.Models.Payloads.UrlPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a URL.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/url
                 {
                    "url": "https://www.example.com"
                 }
            
             This endpoint creates a QR code that, when scanned, directs to the specified URL.
             </remarks>
             <param name="request">The URL details.</param>
                 /// <param name="renderType">The QR code output type</param>
             <returns>Returns a QR code image for the URL.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateEmailQrCode(QRCommand.Api.Models.Payloads.EmailPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for an email message.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/email
                 {
                    "email": "example@example.com",
                    "subject": "Hello",
                    "message": "This is a test email."
                 }
            
             This endpoint creates a QR code that, when scanned, prepares an email with the specified recipient, subject, and message.
             </remarks>
             <param name="request">The email details to encode.</param>
             <param name="renderType">The QR code output type</param>
             <returns>Returns a QR code image containing the email information.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateWhatsAppQrCode(QRCommand.Api.Models.Payloads.WhatsAppMessagePayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for an email message.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/email
                 {
                    "email": "example@example.com",
                    "subject": "Hello",
                    "message": "This is a test email."
                 }
            
             This endpoint creates a QR code that, when scanned, prepares an email with the specified recipient, subject, and message.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The email details to encode.</param>
             <returns>Returns a QR code image containing the email information.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateVCardQrCode(QRCommand.Api.Models.Payloads.VCardPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a vCard.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/vcard
                 {
                    "firstName": "John",
                    "lastName": "Doe"
                    // Additional vCard fields as needed
                 }
            
             This endpoint creates a QR code that, when scanned, imports the specified contact information into the device's address book.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The vCard details.</param>
             <returns>Returns a QR code image containing the vCard information.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateSmsQrCode(QRCommand.Api.Models.Payloads.SmsPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for sending an SMS.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/sms
                 {
                    "phoneNumber": "+1234567890",
                    "message": "Hello, World!"
                 }
            
             This endpoint creates a QR code that, when scanned, prepares an SMS to the specified phone number with the given message.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The SMS message details.</param>
             <returns>Returns a QR code image for sending an SMS.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateCalendarEventQrCode(QRCommand.Api.Models.Payloads.CalendarEventPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a calendar event.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/calendar-event
                 {
                    "subject": "Team Meeting",
                    "description": "Discuss project updates",
                    "location": "Conference Room 1",
                    "start": "2024-03-02T09:00:00",
                    "end": "2024-03-02T10:00:00",
                    "allDayEvent": false,
                    "encoding": "Universal"
                 }
            
             This endpoint creates a QR code that, when scanned, adds a calendar event with the specified details.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The calendar event details.</param>
             <returns>Returns a QR code image containing the calendar event information.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateBookmarkQrCode(QRCommand.Api.Models.Payloads.BookmarkPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a bookmark.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/bookmark
                 {
                    "url": "https://www.example.com",
                    "title": "Example Website"
                 }
            
             This endpoint creates a QR code that, when scanned, saves a bookmark to the specified URL with the given title.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The bookmark details.</param>
             <returns>Returns a QR code image for the bookmark.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateCryptoPaymentQrCode(QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a crypto currency payment address.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/crypto-payment
                 {
                    "address": "1BoatSLRHtKNngkdXEeobR76b53LETtpyT",
                    "amount": 0.5,
                    "label": "Donation",
                    "message": "Thank you for your support!",
                    "currency": "Bitcoin"
                 }
            
             This endpoint creates a QR code that, when scanned, initiates a payment to the specified crypto currency address.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The crypto currency payment details.</param>
             <returns>Returns a QR code image for the crypto currency payment.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateGeolocationQrCode(QRCommand.Api.Models.Payloads.GeolocationPayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a geolocation.
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/geolocation
                 {
                    "latitude": "51.5074",
                    "longitude": "0.1278",
                    "encoding": "GEO"
                 }
            
             This endpoint creates a QR code that, when scanned, shows a location on the map.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The geolocation details.</param>
             <returns>Returns a QR code image for the geolocation.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="M:QRCommand.Api.Controllers.QRCodeGeneratorController.CreateGirocodeQrCode(QRCommand.Api.Models.Payloads.GirocodePayload,QRCommand.Api.Models.RenderType)">
             <summary>
             Generates a QR code for a girocode (SEPA payment).
             </summary>
             <remarks>
             Sample request:
            
                 POST /api/QrCode/create/girocode
                 {
                    "iban": "DE89370400440532013000",
                    "bic": "COBADEFFXXX",
                    "name": "John Doe",
                    "amount": 100.00,
                    "remittanceInformation": "Invoice 12345",
                    "typeOfRemittance": "Unstructured",
                    "purposeOfCreditTransfer": "Consulting Services",
                    "messageToGirocodeUser": "Thank you for your business",
                    "version": "Version1",
                    "encoding": "ISO_8859_1"
                 }
            
             This endpoint creates a QR code for a SEPA payment with the specified details.
             </remarks>
             <param name="renderType">The QR code output type</param>
             <param name="request">The girocode payment details.</param>
             <returns>Returns a QR code image for the SEPA payment.</returns>
             <response code="200">Returns the QR code image</response>
             <response code="400">If the request is invalid</response>
        </member>
        <member name="T:QRCommand.Api.Dtos.QrCodesDto">
            <summary>
            DTO for creating or updating a QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesDto.Content">
            <summary>
            The content of the QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesDto.IsPublic">
            <summary>
            Indicates whether the QR code is public.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Dtos.QrCodesResponseDto">
            <summary>
            DTO for QR code response.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.Id">
            <summary>
            The ID of the QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.Content">
            <summary>
            The content of the QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.IsPublic">
            <summary>
            Indicates whether the QR code is public.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.UserId">
            <summary>
            The ID of the user who owns the QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.CreatedAt">
            <summary>
            The creation date and time of the QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Dtos.QrCodesResponseDto.UpdatedAt">
            <summary>
            The last update date and time of the QR code.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:QRCommand.Api.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:QRCommand.Api.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:QRCommand.Api.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.BookmarkPayload">
            <summary>
            Represents the payload for generating a bookmark QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.BookmarkPayload.Url">
            <summary>
            The URL of the bookmark.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.BookmarkPayload.Title">
            <summary>
            The title of the bookmark.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.CalendarEventPayload">
            <summary>
            Represents the payload for generating a calendar event QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.Subject">
            <summary>
            The subject or title of the calendar event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.Description">
            <summary>
            The description of the calendar event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.Location">
            <summary>
            The location of the calendar event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.Start">
            <summary>
            The start time and date of the calendar event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.End">
            <summary>
            The end time and date of the calendar event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.AllDayEvent">
            <summary>
            Indicates whether the event is an all-day event.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CalendarEventPayload.Encoding">
            <summary>
            The encoding type for the event, either Universal or ICalendar.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload">
            <summary>
            Represents the payload for generating a cryptocurrency payment QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload.Address">
            <summary>
            The cryptocurrency address of the payment receiver.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload.Amount">
            <summary>
            The amount of cryptocurrency to transfer.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload.Label">
            <summary>
            A label for the transaction.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload.Message">
            <summary>
            A message or note for the transaction.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.CryptoCurrencyPaymentPayload.Currency">
            <summary>
            The type of cryptocurrency (Bitcoin, BitcoinCash, Litecoin).
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.EmailPayload">
            <summary>
            Represents the payload for generating an email QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.EmailPayload.Email">
            <summary>
            The recipient's email address.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.EmailPayload.Subject">
            <summary>
            The subject of the email.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.EmailPayload.Message">
            <summary>
            The body message of the email.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.GeolocationPayload">
            <summary>
            Represents the payload for generating a geolocation QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GeolocationPayload.Latitude">
            <summary>
            The latitude of the location.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GeolocationPayload.Longitude">
            <summary>
            The longitude of the location.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GeolocationPayload.Encoding">
            <summary>
            The encoding type for the geolocation, either GEO (for geo URI scheme) or GoogleMaps.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.GirocodePayload">
            <summary>
            Represents the payload for generating a Girocode (SEPA payment) QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Iban">
            <summary>
            The IBAN of the beneficiary.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Bic">
            <summary>
            The BIC of the beneficiary's bank.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Name">
            <summary>
            The name of the beneficiary.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Amount">
            <summary>
            The amount of the credit transfer in Euro.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.RemittanceInformation">
            <summary>
            Optional remittance information (reference text).
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.TypeOfRemittance">
            <summary>
            Indicates whether the remittance information is structured or unstructured.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.PurposeOfCreditTransfer">
            <summary>
            Optional purpose of the credit transfer.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.MessageToGirocodeUser">
            <summary>
            Optional message to the Girocode user.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Version">
            <summary>
            The version of the Girocode.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.GirocodePayload.Encoding">
            <summary>
            The encoding of the Girocode payload.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.SmsPayload">
            <summary>
            Represents the payload for generating an SMS QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.SmsPayload.PhoneNumber">
            <summary>
            The phone number to which the SMS should be sent.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.SmsPayload.Message">
            <summary>
            The message content of the SMS.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.UrlPayload">
            <summary>
            Represents the payload for generating a URL QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.UrlPayload.Url">
            <summary>
            The URL to be encoded into the QR code.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.VCardPayload">
            <summary>
            Represents the payload for generating a vCard QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.VCardPayload.FirstName">
            <summary>
            The first name of the contact.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.VCardPayload.LastName">
            <summary>
            The last name of the contact.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.VCardPayload.PhoneNumber">
            <summary>
            The phone number of the contact.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.VCardPayload.Email">
            <summary>
            The email address of the contact.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.WhatsAppMessagePayload">
            <summary>
            Represents the payload for generating a WhatsApp message QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.WhatsAppMessagePayload.PhoneNumber">
            <summary>
            The phone number to which the WhatsApp message should be sent.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.WhatsAppMessagePayload.Message">
            <summary>
            The message content to be sent via WhatsApp.
            </summary>
        </member>
        <member name="T:QRCommand.Api.Models.Payloads.WiFiPayload">
            <summary>
            Represents the payload for generating a WiFi network connection QR code.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.WiFiPayload.Ssid">
            <summary>
            The SSID (network name) of the WiFi network.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.WiFiPayload.Password">
            <summary>
            The password of the WiFi network.
            </summary>
        </member>
        <member name="P:QRCommand.Api.Models.Payloads.WiFiPayload.IsWPA">
            <summary>
            Indicates whether the network uses WPA/WPA2 security.
            </summary>
        </member>
        <member name="T:QRCodesController">
            <summary>
            Handles CRUD operations for QR codes.
            </summary>
        </member>
        <member name="M:QRCodesController.CreateQRCode(QRCommand.Api.Dtos.QrCodesDto)">
            <summary>
            Creates a new QR code.
            </summary>
            <param name="qrCodesDto">The QR code data.</param>
            <returns>The created QR code.</returns>
            <response code="201">Returns the newly created QR code</response>
            <response code="401">If the user is not authenticated</response>
        </member>
        <member name="M:QRCodesController.GetQRCode(System.Guid)">
            <summary>
            Retrieves a QR code by ID. Public QR codes are accessible without authentication.
            </summary>
            <param name="id">The ID of the QR code.</param>
            <returns>The requested QR code if found.</returns>
            <response code="200">Returns the requested QR code</response>
            <response code="404">If the QR code is not found or not accessible</response>
        </member>
        <member name="M:QRCodesController.GetAllQRCodes">
            <summary>
            Retrieves all QR codes for the authenticated user.
            </summary>
            <returns>A list of QR codes owned by the user.</returns>
            <response code="200">Returns the list of QR codes</response>
            <response code="401">If the user is not authenticated</response>
        </member>
        <member name="M:QRCodesController.UpdateQRCode(System.Guid,QRCommand.Api.Dtos.QrCodesDto)">
            <summary>
            Updates an existing QR code.
            </summary>
            <param name="id">The ID of the QR code to update.</param>
            <param name="qrCodesDto">The updated QR code data.</param>
            <returns>A status indicating the result of the update operation.</returns>
            <response code="204">If the QR code was successfully updated</response>
            <response code="401">If the user is not authenticated</response>
            <response code="404">If the QR code is not found or not owned by the user</response>
        </member>
        <member name="M:QRCodesController.DeleteQRCode(System.Guid)">
            <summary>
            Deletes a QR code.
            </summary>
            <param name="id">The ID of the QR code to delete.</param>
            <returns>A status indicating the result of the delete operation.</returns>
            <response code="204">If the QR code was successfully deleted</response>
            <response code="401">If the user is not authenticated</response>
            <response code="404">If the QR code is not found or not owned by the user</response>
        </member>
    </members>
</doc>
